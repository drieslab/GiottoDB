% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dbvect.R
\name{dbvect}
\alias{dbvect}
\alias{dbvect,data.frame-method}
\alias{dbvect,giottoPoints-method}
\alias{dbvect,SpatVector-method}
\alias{dbvect,character-method}
\title{Create a framework for chunked processing with terra SpatVectors}
\usage{
\S4method{dbvect}{data.frame}(
  x,
  db = ":temp:",
  remote_name = "dbv_test",
  type = "points",
  geom = c("x", "y"),
  ...
)

\S4method{dbvect}{giottoPoints}(x, db = ":temp:", remote_name = "dbv_test", drop = TRUE, ...)

\S4method{dbvect}{giottoPoints}(x, db = ":temp:", remote_name = "dbv_test", drop = TRUE, ...)

\S4method{dbvect}{SpatVector}(x, db = ":temp:", remote_name = "dbv_test", ...)

\S4method{dbvect}{character}(
  x,
  db = ":temp:",
  remote_name = "dbv_test",
  type = "points",
  geom = c("x", "y"),
  read_fun,
  n = 10L,
  stop_cond = function(x) nrow(x) == 0L,
  callback = NULL,
  verbose = TRUE,
  log_to = NULL,
  report_n_chunks = 10L,
  ...
)
}
\arguments{
\item{x}{data.frame or terra SpatVector}

\item{db}{filepath or hash ID of existing DB backend or pool connection. Also
accepts :temp: token for `tempdir()`.}

\item{remote_name}{name of table to use in backend}

\item{geom}{character. The field name(s) with the geometry data. Either two
names for x and y coordinates of points, or a single name for a single column
with WKT geometries)}

\item{\dots}{additional params to pass to table creation and `stream_to_db`}

\item{read_fun}{function. Controls how information should be read. Should
expose formal arguments 'x', 'n', and 'callback'}

\item{n}{numeric. number of units (usually rows) to read per chunk}

\item{stop_cond}{function. Function to run on each chunk. Will stop the chunk
read looping when evaluates to TRUE. Default provided function stops the read
looping when a chunk that has been read in has 0 rows.}

\item{callback}{(optional) function. Single param function that will take a
chunk as input, then modify it into the format expected by the 'write_fun'
and db representation}

\item{verbose}{be verbose}

\item{log_to}{directory path. Create a logfile in this directory that logs
the progress of the chunked read. Any specified directory must exist.
etting 'NULL' logs to the same directory as the database.}

\item{report_n_chunks}{if 'verbose = TRUE', report in the console every n
chunks that are processed.}

\item{overwrite}{logical for whether to overwrite if table already exists.
Alternatively, pass 'append' to add to existing table.}

\item{atts}{data.frame with the attributes. The number of rows must match the
number of geometrical elements}

\item{include_values}{(SpatVector input only) whether to include attribute
values in output}
}
\description{
Create an S4 dbPointsProxy object
}
\examples{
\dontrun{
dbBackend()
### SpatVector from file
f <- system.file("ex/lux.shp", package="terra")
f
v <- vect(f)

dbpoly <- dbvect(v, overwrite = TRUE)

## Appending geometries
nrow(dbpoly)
dbpoly <- dbvect(v, overwrite = "append")
nrow(dbpoly)
}
}
