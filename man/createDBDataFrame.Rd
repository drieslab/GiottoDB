% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dbDataFrame.R
\name{createDBDataFrame}
\alias{createDBDataFrame}
\title{Create a dataframe with database backend}
\usage{
createDBDataFrame(
  df,
  remote_name = "df_test",
  db_path = ":temp:",
  overwrite = FALSE,
  cores = 1L,
  nlines = 10000L,
  callback = NULL,
  ...
)
}
\arguments{
\item{df}{object coercible to matrix or filepath to matrix data accessible
by one of the read functions. Can also be a pre-prepared tbl_sql to compatible
database table}

\item{remote_name}{name to assign within database}

\item{db_path}{path to database on disk}

\item{overwrite}{whether to overwrite if table already exists in database}

\item{cores}{number of cores to use if reading into database}

\item{nlines}{number of lines to read per chunk if reading into database}

\item{callback}{callback functions to apply to each data chunk before it is
sent to the database backend}

\item{...}{additional params to pass}
}
\description{
Create a dataframe with database backend
}
\details{
Information is only read into the database during this process. Based
on the \code{remote_name} and \code{db_path} a lazy connection is then made
downstream during \code{dbData} initialization and appended to the object.
If a dplyr tbl is provided as pre-made input then it is evaluated for whether
it is a \code{tbl_Pool} and whether the table exists within the specified
backend then directly passed downstream.
}
