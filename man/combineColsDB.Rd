% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_input.R
\name{combineColsDB}
\alias{combineColsDB}
\title{Combine designated columns in database table}
\usage{
combineColsDB(
  x,
  col_indices,
  combined_colname = "new",
  remove_originals = TRUE
)
}
\arguments{
\item{col_indices}{numerical vector of columns to combine}

\item{remove_originals}{boolean. Whether to remove the original columns}

\item{backend_ID}{ID of backend}

\item{remote_name}{name of table on database}
}
\description{
Combines designated columns into a single one and removes the
originals. Useful for wrangling ID column values. The combined column will
be created as a new column called 'combined_col'
}
\details{
streamToDB = function(path,
                      backend_ID,
                      remote_name = 'read_temp',
                      ...) {
  stopifnot(is.character(remote_name))
  stopifnot(is.character(backend_ID))
  stopifnot(file.exists(path))

  conn = getBackendConn(backend_ID = backend_ID)
  on.exit(pool::poolReturn(conn))

  if(match_file_ext(path = path, ext_to_match = '.csv')) { # .csv
    if(dbms(conn) == 'duckdb') {
      duckdb::duckdb_read_csv(conn = conn,
                              name = remote_name,
                              files = path,
                              delim = ',',
                              header = TRUE,
                              ...)
    } else {
      arkdb::unark(files = path,
                   db_con = conn,
                   tablenames = remote_name,
                   overwrite = TRUE,
                   ...)
    }

  } else if(match_file_ext(path = path, ext_to_match = '.tsv')) { # .tsv

    arkdb::unark(files = path,
                 db_con = conn,
                 tablenames = remote_name,
                 overwrite = TRUE,
                 ...)

  } else { # else throw error
    stopf('readMatrixDB only works for .csv and .tsv type files
          Not:', basename(path))
  }
}
}
